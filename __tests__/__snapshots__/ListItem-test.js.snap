// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render ListItem with data 1`] = `
<View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "opacity": 1,
        "paddingBottom": 8,
        "paddingHorizontal": 10,
        "paddingTop": 20,
        "paddingVertical": 10,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 5,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "uri": "nop",
          }
        }
        style={
          Object {
            "height": 21,
            "width": 21,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontSize": 17,
            "paddingHorizontal": 20,
          }
        }
      >
        课程
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <Image
        source={
          Object {
            "uri": "right_arrow",
          }
        }
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "height": 1,
      }
    }
  />
</View>
`;

exports[`render an empty ListItem 1`] = `
<View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "space-between",
        "opacity": 1,
        "paddingBottom": 8,
        "paddingHorizontal": 10,
        "paddingTop": 20,
        "paddingVertical": 10,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 5,
        }
      }
    >
      <Image
        resizeMode="contain"
        source={
          Object {
            "uri": "",
          }
        }
        style={
          Object {
            "height": 21,
            "width": 21,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "#000000",
            "fontSize": 17,
            "paddingHorizontal": 20,
          }
        }
      >
        
      </Text>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
        }
      }
    >
      <Image
        source={
          Object {
            "uri": "right_arrow",
          }
        }
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "#F5F5F5",
        "height": 1,
      }
    }
  />
</View>
`;
